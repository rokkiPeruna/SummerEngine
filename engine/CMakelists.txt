#root/engine

#Add include directories
include_directories(${PROJECT_SOURCE_DIR}/external/STB)
include_directories(${PROJECT_SOURCE_DIR}/engine/include)
include_directories(${PROJECT_SOURCE_DIR}/engine/src)
include_directories(${PROJECT_SOURCE_DIR}/external)
include_directories(${PROJECT_SOURCE_DIR}/external/imgui)
include_directories(${PROJECT_SOURCE_DIR}/external/OpenGL)
include_directories(${PROJECT_SOURCE_DIR}/libs)

#Add library directories
link_directories(${PROJECT_SOURCE_DIR}/libs)

#-----------------------------------------------------------------
#Components
set(COMPONENTS_FILES
	include/components/Component.h
	include/components/CDynamic.h
	include/components/CCollidable.h
    include/components/CShape.h
    include/components/CTransformable.h
	include/components/CTexture.h
	include/components/CAnimation.h
    )
source_group("components" FILES ${COMPONENTS_FILES})
#-----------------------------------------------------------------
#Systems
set(SYSTEMS_FILES
	include/systems/ComponentSystem.h
	src/systems/ComponentSystem.cpp
	include/systems/CompSystemEventHandler.h
	src/systems/CompSystemEventHandler.cpp
	include/systems/DummySystemCPP.txt
	include/systems/MovementSystem.h
	src/systems/MovementSystem.cpp
	include/systems/TransformSystem.h
    src/systems/TransformSystem.cpp
	include/systems/CollisionSystem.h
    src/systems/CollisionSystem.cpp
	include/systems/AnimationSystem.h
    src/systems/AnimationSystem.cpp
    )
source_group("systems" FILES ${SYSTEMS_FILES})
#-----------------------------------------------------------------
#Managers
set(MANAGERS_FILES
	include/managers/Manager.h
	include/managers/ResourceManager.h
	src/managers/ResourceManager.cpp
	include/managers/Resource.h
	include/managers/EntityManager.h
	src/managers/EntityManager.cpp
	include/managers/ComponentManager.h
	src/managers/ComponentManager.cpp
	include/managers/Entity.h
	src/managers/Entity.cpp
	include/managers/SceneManager.h
	src/managers/SceneManager.cpp
	include/managers/Scene.h
	src/managers/Scene.cpp
	include/managers/IOManager.h
	src/managers/IOManager.cpp
	include/managers/IOLowLevelInputBinding.h
	include/managers/Keyboard.h
	src/managers/Keyboard.cpp
	include/managers/Mouse.h
	src/managers/Mouse.cpp
	)
source_group("managers" FILES ${MANAGERS_FILES})
#-----------------------------------------------------------------
#Core
set(CORE_FILES
	include/core/Engine.h
	src/core/Engine.cpp
	include/core/Window.h
	src/core/Window.cpp	
	include/core/Messages.h
	include/core/Messenger.h
	src/core/Messenger.cpp
	include/core/SE_exceptions.h
    )
source_group("core" FILES ${CORE_FILES})

#-----------------------------------------------------------------
#Renderers
set(RENDERERS_FILES	
    include/renderers/Render.h
    src/renderers/Render.cpp
    include/renderers/EditorRender.h
    src/renderers/EditorRender.cpp
    include/renderers/GameRender.h
    src/renderers/GameRender.cpp
	include/renderers/DebugRender.h
	src/renderers/DebugRender.cpp
	include/renderers/Camera.h
    src/renderers/Camera.cpp
    include/renderers/RenderBatch.h
    src/renderers/RenderBatch.cpp
	)
source_group("renderers" FILES ${RENDERERS_FILES})
#-----------------------------------------------------------------
#IDs
set(IDS_FILES
	include/ids/ComponentTypeList.h
	include/ids/SystemAndManagerIDList.h
	)
source_group("ids" FILES ${IDS_FILES})

#-----------------------------------------------------------------
#Utility
set(UTILITY_FILES
	include/utility/Typedefs.h
	include/utility/Math.h
	include/utility/Time.h
	src/utility/Time.cpp
	include/utility/Clock.h
	src/utility/Clock.cpp
	include/utility/JsonUtilFunctions.h
	include/utility/EditorFunctions.h
	src/utility/EditorFunctions.cpp
	)
source_group("utility" FILES ${UTILITY_FILES})
#-----------------------------------------------------------------
#Engine Gui
set(ENGINE_GUI_MANAGER_FILES
	include/gui/GraphicalUserInterface.h
	include/gui/imgui_impl_sdl_gl3.h
	src/gui/imgui_impl_sdl_gl3.cpp
	include/gui/gui_values.h
	src/gui/gui_values.cpp
	src/gui/GraphicalUserInterface.cpp
	include/gui/EngineGui.h
	src/gui/EngineGui.cpp
	include/gui/ManagerGui.h
	src/gui/ManagerGui.cpp
	include/gui/GuiSceneMgr.h
	src/gui/GuiSceneMgr.cpp
	include/gui/GuiEntityMgr.h
	src/gui/GuiEntityMgr.cpp
	include/gui/GuiCompMgr.h
	src/gui/GuiCompMgr.cpp
	)
set(ENGINE_GUI_COMPONENT_MODIFIERS
	include/gui/CompEditorGui.h
	src/gui/CompEditorGui.cpp	
	include/gui/CCollidableEditor.h
	src/gui/CCollidableEditor.cpp	
	include/gui/CDynamicEditor.h
	src/gui/CDynamicEditor.cpp	
	include/gui/CShapeEditor.h
	src/gui/CShapeEditor.cpp	
	include/gui/CTransformableEditor.h
	src/gui/CTransformableEditor.cpp	
	include/gui/CTextureEditor.h
	src/gui/CTextureEditor.cpp	
	)
set(ENGINE_GUI_FILES
	${ENGINE_GUI_MANAGER_FILES}
	${ENGINE_GUI_COMPONENT_MODIFIERS}
	)
source_group("engine_gui" FILES ${ENGINE_GUI_MANAGER_FILES})
source_group("engine_gui/component_modifiers" FILES ${ENGINE_GUI_COMPONENT_MODIFIERS})
#-----------------------------------------------------------------
#Imgui
set(IMGUI_FILES
	${PROJECT_SOURCE_DIR}/external/imgui/imconfig.h
	${PROJECT_SOURCE_DIR}/external/imgui/imgui.cpp
	${PROJECT_SOURCE_DIR}/external/imgui/imgui.h
	${PROJECT_SOURCE_DIR}/external/imgui/imgui_demo.cpp
	${PROJECT_SOURCE_DIR}/external/imgui/imgui_draw.cpp
	${PROJECT_SOURCE_DIR}/external/imgui/imgui_internal.h
	)
source_group("imgui" FILES ${IMGUI_FILES})
#-----------------------------------------------------------------
#STB
set(STB_FILES
	${PROJECT_SOURCE_DIR}/external/STB/stb_image.h
	)
source_group("stb" FILES ${STB_FILES})
#-----------------------------------------------------------------
#Main.cpp
set(MAIN_CPP
	src/main.cpp
	)
source_group("" FILES ${MAIN_CPP})
#-----------------------------------------------------------------
#Project name
add_executable(engine
	src/main.cpp
	${COMPONENTS_FILES}
	${SYSTEMS_FILES}
	${MANAGERS_FILES}
	${CORE_FILES}
	${RENDERERS_FILES}
	${IDS_FILES}
	${UTILITY_FILES}
	${ENGINE_GUI_FILES}
	${IMGUI_FILES}
	${STB_FILES}
	${MAIN_CPP}
	)


target_link_libraries(engine PUBLIC 
					box2d 
					SDL2-static 
					SDL2main 
					glew32 
					glew32s 	
					OpenGL32
				)
# Remember to add 'OALWrapper' to target_link_libraries

#Add folder for exes
set_property(TARGET engine PROPERTY FOLDER "engine")

# Properties->General->Output Directory
set_target_properties(engine PROPERTIES
                      RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/executables)
